{
	"scope": "source.java",
	"completions":
	[
		{"trigger": "aClass\tjunit method", "contents": "aClass(${1:Class<?>});"},
		{"trigger": "addToAnnotationLists\tjunit method", "contents": "addToAnnotationLists(${1:T}, ${2:Map<Class<? extends Annotation>}, ${3:List<T>>});"},
		{"trigger": "allOf\tjunit method", "contents": "allOf(${1:Iterable<Matcher<? super T>>});"},
		{"trigger": "allOf\tjunit method", "contents": "allOf(${1:Matcher<? super T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>});"},
		{"trigger": "allOf\tjunit method", "contents": "allOf(${1:Matcher<? super T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>});"},
		{"trigger": "allOf\tjunit method", "contents": "allOf(${1:Matcher<? super T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>}, ${5:Matcher<? super T>});"},
		{"trigger": "allOf\tjunit method", "contents": "allOf(${1:Matcher<? super T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>}, ${5:Matcher<? super T>}, ${6:Matcher<? super T>});"},
		{"trigger": "any\tjunit method", "contents": "any(${1:Class<T>});"},
		{"trigger": "anyOf\tjunit method", "contents": "anyOf(${1:Iterable<Matcher<? super T>>});"},
		{"trigger": "anyOf\tjunit method", "contents": "anyOf(${1:Matcher<T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>});"},
		{"trigger": "anyOf\tjunit method", "contents": "anyOf(${1:Matcher<T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>}, ${5:Matcher<? super T>});"},
		{"trigger": "anyOf\tjunit method", "contents": "anyOf(${1:Matcher<T>}, ${2:Matcher<? super T>}, ${3:Matcher<? super T>}, ${4:Matcher<? super T>}, ${5:Matcher<? super T>}, ${6:Matcher<? super T>});"},
		{"trigger": "anything\tjunit method", "contents": "anything(${1:String});"},
		{"trigger": "assertArrayEquals[]\tjunit method", "contents": "assertArrayEquals(${1:Object[]}, ${2:Object[]});"},
		{"trigger": "assertArrayEquals\tjunit method", "contents": "assertArrayEquals(${1:Object[]}, ${2:Object[]});"},
		{"trigger": "assertEmpty\tjunit method", "contents": "assertEmpty(${1:List<Throwable>});"},
		{"trigger": "assertEquals[]\tjunit method", "contents": "assertEquals(${1:String}, ${2:Object[]}, ${3:Object[]});"},
		{"trigger": "assertEquals\tjunit method", "contents": "assertEquals(${1:String}, ${2:Object}, ${3:Object});"},
		{"trigger": "assertFalse\tjunit method", "contents": "assertFalse(${1:String}, ${2:boolean});"},
		{"trigger": "assertNotEquals\tjunit method", "contents": "assertNotEquals(${1:String}, ${2:Object}, ${3:Object});"},
		{"trigger": "assertNotNull\tjunit method", "contents": "assertNotNull(${1:String}, ${2:Object});"},
		{"trigger": "assertNotSame\tjunit method", "contents": "assertNotSame(${1:String}, ${2:Object}, ${3:Object});"},
		{"trigger": "assertNull\tjunit method", "contents": "assertNull(${1:String}, ${2:Object});"},
		{"trigger": "assertSame\tjunit method", "contents": "assertSame(${1:String}, ${2:Object}, ${3:Object});"},
		{"trigger": "assertThat\tjunit method", "contents": "assertThat(${1:String}, ${2:boolean});"},
		{"trigger": "assertTrue\tjunit method", "contents": "assertTrue(${1:String}, ${2:boolean});"},
		{"trigger": "asString\tjunit method", "contents": "asString(${1:SelfDescribing});"},
		{"trigger": "assumeFalse\tjunit method", "contents": "assumeFalse(${1:String}, ${2:boolean});"},
		{"trigger": "assumeNoException\tjunit method", "contents": "assumeNoException(${1:String}, ${2:Throwable});"},
		{"trigger": "assumeNotNull\tjunit method", "contents": "assumeNotNull(${1:Object...});"},
		{"trigger": "assumeThat\tjunit method", "contents": "assumeThat(${1:String}, ${2:T}, ${3:Matcher<T>});"},
		{"trigger": "assumeTrue\tjunit method", "contents": "assumeTrue(${1:String}, ${2:boolean});"},
		{"trigger": "both\tjunit method", "contents": "both(${1:Matcher<? super LHS>});"},
		{"trigger": "both\tjunit method", "contents": "both(${1:Matcher<? super T>});"},
		{"trigger": "builder\tjunit method", "contents": "builder(${1:});"},
		{"trigger": "categoryFilter\tjunit method", "contents": "categoryFilter(${1:boolean}, ${2:Set<Class<?>>}, ${3:boolean}, ${4:Set<Class<?>>});"},
		{"trigger": "classes\tjunit method", "contents": "classes(${1:Class<?>...});"},
		{"trigger": "classes\tjunit method", "contents": "classes(${1:Computer}, ${2:Class<?>...});"},
		{"trigger": "classes\tjunit method", "contents": "classes(${1:});"},
		{"trigger": "classWithoutSuiteMethod\tjunit method", "contents": "classWithoutSuiteMethod(${1:Class<?>});"},
		{"trigger": "containsString\tjunit method", "contents": "containsString(${1:String});"},
		{"trigger": "createSuiteDescription\tjunit method", "contents": "createSuiteDescription(${1:Class<?>});"},
		{"trigger": "createSuiteDescription\tjunit method", "contents": "createSuiteDescription(${1:String}, ${2:Annotation...});"},
		{"trigger": "createSuiteDescription\tjunit method", "contents": "createSuiteDescription(${1:String}, ${2:Serializable}, ${3:Annotation...});"},
		{"trigger": "createTestDescription\tjunit method", "contents": "createTestDescription(${1:Class<?>}, ${2:String});"},
		{"trigger": "createTestDescription\tjunit method", "contents": "createTestDescription(${1:Class<?>}, ${2:String}, ${3:Annotation...});"},
		{"trigger": "createTestDescription\tjunit method", "contents": "createTestDescription(${1:String}, ${2:String}, ${3:Annotation...});"},
		{"trigger": "createTestDescription\tjunit method", "contents": "createTestDescription(${1:String}, ${2:String}, ${3:Serializable});"},
		{"trigger": "describedAs\tjunit method", "contents": "describedAs(${1:String}, ${2:Matcher<T>}, ${3:Object...});"},
		{"trigger": "either\tjunit method", "contents": "either(${1:Matcher<? super LHS>});"},
		{"trigger": "either\tjunit method", "contents": "either(${1:Matcher<? super T>});"},
		{"trigger": "emptyRuleChain\tjunit method", "contents": "emptyRuleChain(${1:});"},
		{"trigger": "emptySuite\tjunit method", "contents": "emptySuite(${1:});"},
		{"trigger": "endsWith\tjunit method", "contents": "endsWith(${1:String});"},
		{"trigger": "equalTo\tjunit method", "contents": "equalTo(${1:T});"},
		{"trigger": "errorReport\tjunit method", "contents": "errorReport(${1:Class<?>}, ${2:Throwable});"},
		{"trigger": "everyItem\tjunit method", "contents": "everyItem(${1:Matcher<T>});"},
		{"trigger": "everyItem\tjunit method", "contents": "everyItem(${1:Matcher<U>});"},
		{"trigger": "exclude\tjunit method", "contents": "exclude(${1:boolean}, ${2:Class<?>...});"},
		{"trigger": "fail\tjunit method", "contents": "fail(${1:String});"},
		{"trigger": "failureCountIs\tjunit method", "contents": "failureCountIs(${1:int});"},
		{"trigger": "forFolder\tjunit method", "contents": "forFolder(${1:File});"},
		{"trigger": "forFolder\tjunit method", "contents": "forFolder(${1:String});"},
		{"trigger": "forValue\tjunit method", "contents": "forValue(${1:String}, ${2:Object});"},
		{"trigger": "hasFailureContaining\tjunit method", "contents": "hasFailureContaining(${1:String});"},
		{"trigger": "hasItem\tjunit method", "contents": "hasItem(${1:Matcher<? super T>});"},
		{"trigger": "hasItem\tjunit method", "contents": "hasItem(${1:T});"},
		{"trigger": "hasItems\tjunit method", "contents": "hasItems(${1:Matcher<? super T>...});"},
		{"trigger": "hasItems\tjunit method", "contents": "hasItems(${1:T...});"},
		{"trigger": "hasSingleFailureContaining\tjunit method", "contents": "hasSingleFailureContaining(${1:String});"},
		{"trigger": "include\tjunit method", "contents": "include(${1:boolean}, ${2:Class<?>...});"},
		{"trigger": "include\tjunit method", "contents": "include(${1:Class<?>});"},
		{"trigger": "instanceOf\tjunit method", "contents": "instanceOf(${1:Class<?>});"},
		{"trigger": "is\tjunit method", "contents": "is(${1:Class<T>});"},
		{"trigger": "is\tjunit method", "contents": "is(${1:Matcher<T>});"},
		{"trigger": "is\tjunit method", "contents": "is(${1:T});"},
		{"trigger": "isA\tjunit method", "contents": "isA(${1:Class<T>});"},
		{"trigger": "isException\tjunit method", "contents": "isException(${1:Matcher<T>});"},
		{"trigger": "isSuccessful\tjunit method", "contents": "isSuccessful(${1:});"},
		{"trigger": "isThrowable\tjunit method", "contents": "isThrowable(${1:Matcher<T>});"},
		{"trigger": "main\tjunit method", "contents": "main(${1:String...});"},
		{"trigger": "matched\tjunit method", "contents": "matched(${1:T}, ${2:Description});"},
		{"trigger": "matchMethodDescription\tjunit method", "contents": "matchMethodDescription(${1:Description});"},
		{"trigger": "method\tjunit method", "contents": "method(${1:Class<?>}, ${2:String});"},
		{"trigger": "methods\tjunit method", "contents": "methods(${1:});"},
		{"trigger": "millis\tjunit method", "contents": "millis(${1:long});"},
		{"trigger": "none\tjunit method", "contents": "none(${1:});"},
		{"trigger": "not\tjunit method", "contents": "not(${1:Matcher<T>});"},
		{"trigger": "not\tjunit method", "contents": "not(${1:T});"},
		{"trigger": "notMatched\tjunit method", "contents": "notMatched(${1:});"},
		{"trigger": "notNullValue\tjunit method", "contents": "notNullValue(${1:Class<T>});"},
		{"trigger": "nullValue\tjunit method", "contents": "nullValue(${1:Class<T>});"},
		{"trigger": "outerRule\tjunit method", "contents": "outerRule(${1:TestRule});"},
		{"trigger": "runClasses\tjunit method", "contents": "runClasses(${1:Class<?>...});"},
		{"trigger": "runClasses\tjunit method", "contents": "runClasses(${1:Computer}, ${2:Class<?>...});"},
		{"trigger": "runner\tjunit method", "contents": "runner(${1:Runner});"},
		{"trigger": "sameInstance\tjunit method", "contents": "sameInstance(${1:T});"},
		{"trigger": "seconds\tjunit method", "contents": "seconds(${1:long});"},
		{"trigger": "serial\tjunit method", "contents": "serial(${1:});"},
		{"trigger": "signatures\tjunit method", "contents": "signatures(${1:Constructor<?>});"},
		{"trigger": "signatures\tjunit method", "contents": "signatures(${1:Method});"},
		{"trigger": "startsWith\tjunit method", "contents": "startsWith(${1:String});"},
		{"trigger": "storedLocally\tjunit method", "contents": "storedLocally(${1:File});"},
		{"trigger": "testResult\tjunit method", "contents": "testResult(${1:Class<?>});"},
		{"trigger": "testResult\tjunit method", "contents": "testResult(${1:Request});"},
		{"trigger": "theInstance\tjunit method", "contents": "theInstance(${1:T});"},
		{"trigger": "toString\tjunit method", "contents": "toString(${1:SelfDescribing});"},
		{"trigger": "valueOf\tjunit method", "contents": "valueOf(${1:String});"},
		{"trigger": "values\tjunit method", "contents": "values(${1:});"}
	]
}